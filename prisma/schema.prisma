// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserModel {
  id           String              @id @default(uuid()) @db.Uuid
  name         String
  email        String
  domainMember DomainMemberModel[]
}

model DomainMemberModel {
  id     String     @id @default(uuid()) @db.Uuid
  user   UserModel? @relation(fields: [userId], references: [id])
  userId String?    @db.Uuid

  project        ProjectModel? @relation(fields: [projectModelId], references: [id])
  projectModelId String?       @db.Uuid

  role ProjectRoleModel
}

model DomainModel {
  id   String @id @default(uuid()) @db.Uuid
  name String

  cloudstackDomainId  String
  cloudstackAccountId String?

  // VPC
  vpc   VPCModel? @relation(fields: [vpcId], references: [id])
  vpcId String?   @db.Uuid

  // Root Project
  rootProject   ProjectModel? @relation(fields: [rootProjectId], references: [id])
  rootProjectId String?       @db.Uuid

  // Network
  networks NetworkModel[]
}

model NetworkModel {
  id                String @id @default(uuid()) @db.Uuid
  name              String
  cloudstackId      String
  cloudstackOfferId String
  cloudstackAclId   String
  gateway           String
  netmask           String

  // Domain Model
  DomainModel   DomainModel? @relation(fields: [domainModelId], references: [id])
  domainModelId String?      @db.Uuid
}

model VPCModel {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  cloudstackId String
  cidr         String
  dns1         String
  dns2         String
  state        String
  DomainModel  DomainModel[]
}

model ProjectModel {
  id                  String                @id() @default(uuid()) @db.Uuid
  name                String
  type                ProjectTypeModel?
  DomainModel         DomainModel[]
  DomainMemberModel   DomainMemberModel[]
  VirtualMachineModel VirtualMachineModel[]
}

model VirtualMachineModel {
  id                   String @id() @default(uuid()) @db.Uuid
  name                 String
  os                   String
  ipAddress            String
  cloudstackTemplateId String
  cloudstackOfferId    String

  // Project
  project   ProjectModel? @relation(fields: [projectId], references: [id])
  projectId String?       @db.Uuid
}

enum ProjectTypeModel {
  ROOT
  MEMBER
}

enum ProjectRoleModel {
  OWNER
  ADMIN
  MEMBER
}
